#!/usr/bin/env python3

import pandas as pd
import smtplib
from email.mime.text import MIMEText
from email.utils import formatdate

# === CONFIGURATION ===
TXT_FILE = "/tmp/last_reboot_times.txt"
SMTP_SERVER = "mail.yourdomain.com"
SMTP_PORT = 25
SENDER = "noreply@yourdomain.com"
RECIPIENTS = ["admin@yourdomain.com"]
SUBJECT = "Last Reboot Times Report"

# === STEP 1: Parse TXT file ===
servers, reboots = [], []

try:
    with open(TXT_FILE, "r") as f:
        lines = [line.strip() for line in f if line.strip()]

    i = 0
    while i < len(lines) - 1:
        server_line = lines[i].rstrip(",")
        boot_line = lines[i + 1]
        if boot_line.lower().startswith("system boot"):
            reboot_time = boot_line.replace("system boot", "").strip()
            servers.append(server_line)
            reboots.append(reboot_time)
        i += 2

except FileNotFoundError:
    print(f"{TXT_FILE} not found.")
    servers, reboots = [], []

# === STEP 2: Convert to DataFrame ===
df = pd.DataFrame({"Server": servers, "Last Reboot": reboots})

# === STEP 3: Print all fetched data in console ===
if df.empty:
    print("No data fetched from file.")
else:
    print("All fetched data:\n")
    print(df.to_string(index=False))

# === STEP 4: Prepare email body ===
if df.empty:
    email_body = "<p>Hello Team,</p><p>No server is rebooted.</p>"
else:
    email_body = "<p>Hello Team,</p><p>Please find the details of the rebooted VMs grouped by date:</p>"
    # Extract date part (YYYY-MM-DD)
    df['Date'] = df['Last Reboot'].str.split(' ').str[0]
    # Group by date
    for date, group in df.groupby('Date'):
        email_body += f"<p><b>Date: {date}</b></p>"
        email_body += group[['Server', 'Last Reboot']].to_html(index=False, border=1, justify='center')

# === STEP 5: Send email ===
msg = MIMEText(email_body, "html")
msg["From"] = SENDER
msg["To"] = ", ".join(RECIPIENTS)
msg["Date"] = formatdate(localtime=True)
msg["Subject"] = SUBJECT

with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as smtp:
    smtp.sendmail(SENDER, RECIPIENTS, msg.as_string())

print("\nEmail sent successfully.")
