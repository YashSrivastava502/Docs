from playwright.sync_api import sync_playwright

def process_alert(alert, recep_dict, owner_email, cc_email, recep_dict2):
    base_url = "https://portal.azure.com/#@fareportal.com"
    target_resource = alert.get("targetResource")
    target_resource_name = alert.get("targetResourceName")
    severity = alert.get("severity")
    alert_description = alert.get("name")
    alert_description_lower = alert_description.lower()
    full_url = f"{base_url}/resource{target_resource}"
    screenshot_filename = f"screenshots/{target_resource_name}.png"

    with sync_playwright() as p:
        # Launch default Chrome user profile
        browser = p.chromium.launch_persistent_context(
            user_data_dir="C:/Users/y.s.va22/AppData/Local/Google/Chrome/User Data",
            headless=False,
            executable_path="C:/Program Files/Google/Chrome/Application/chrome.exe"
        )
        page = browser.new_page()
        try:
            page.goto(full_url, timeout=60000)
            page.wait_for_timeout(20000)  # Let the page load fully

            if any(keyword in alert_description_lower for keyword in ["failed", "failure", "failures"]):
                page.click("div[data-telemetryname='Menu-failures']")

                if any(keyword in alert_description_lower for keyword in ["dependency", "dapendency", "dependency failure"]):
                    page.wait_for_timeout(20000)
                    iframe_element = page.frame_locator("iframe.fxs-part-frame").first
                    iframe_element.locator("#Dependencies").click()
                    page.wait_for_timeout(15000)
                    page.screenshot(path=screenshot_filename)
                    send_email(target_resource_name, owner_email, screenshot_filename, severity, alert_description, cc_email)

                elif "exception" in alert_description_lower:
                    page.wait_for_timeout(20000)
                    iframe_element = page.frame_locator("iframe.fxs-part-frame").first
                    iframe_element.locator("#Exceptions").click()
                    page.wait_for_timeout(15000)
                    page.screenshot(path=screenshot_filename)
                    send_email(target_resource_name, owner_email, screenshot_filename, severity, alert_description, cc_email)

            else:
                page.click("div[data-telemetryname='Menu-performance']")
                page.wait_for_timeout(10000)
                page.screenshot(path=screenshot_filename)
                send_email(target_resource_name, owner_email, screenshot_filename, severity, alert_description, cc_email)

            print(f"Alert email sent for {target_resource_name}")

        except Exception as e:
            print(f"Error processing alert: {e}")
        finally:
            browser.close()
