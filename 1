# === DOMAIN TO CHECK ===
$domain = "www.cheapoair.com"
$expectedName = "e86859.dsca.akamaiedge.net"
$expectedAliases = @(
    "www.cheapoair.com",
    "www.cheapoair.com.edgekey.net"
)

# === SMTP CONFIGURATION (NO LOGIN) ===
$smtpServer = "192.168.1.100"           # Replace with your SMTP server
$smtpPort = 25
$from = "dns-monitor@corp.local"
$to = "admin@corp.local"
$subject = "DNS FOR FROM DOMAIN NAME"   # As per your instruction

# === RUN NSLOOKUP ===
try {
    $nslookupRaw = nslookup $domain 2>&1
    $nslookupOutput = $nslookupRaw -join "`n"
} catch {
    Write-Host "❌ Failed to run nslookup."
    exit 1
}

# === PARSE OUTPUT ===
$nameLine = $nslookupRaw | Where-Object { $_ -match "^Name:\s+" }
$aliasLines = $nslookupRaw | Where-Object { $_ -match "^\s*Aliases?:\s+" -or ($_ -match "^\s{1,}\S+\.\S+") }

$nameValue = $nameLine -replace "^Name:\s+", "" -replace "\s+$", ""
$aliasesFound = $aliasLines | ForEach-Object { $_.Trim() -replace "^Aliases?:\s+", "" } | Where-Object { $_ -ne "" }

# === VALIDATION ===
$nameMatches = ($nameValue -eq $expectedName)
$aliasesMatch = ($expectedAliases | Sort-Object) -join "," -eq ($aliasesFound | Sort-Object) -join ","

# === SEND EMAIL IF MISMATCH ===
if (-not ($nameMatches -and $aliasesMatch)) {
    Write-Host "❌ DNS mismatch! Sending email alert..."

    # Send full nslookup output as body
    Send-MailMessage -SmtpServer $smtpServer -Port $smtpPort `
        -From $from -To $to -Subject $subject -Body $nslookupOutput
} else {
    Write-Host "✅ DNS matches expected values. No mail sent."
}
