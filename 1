from hpeOneView.oneview_client import OneViewClient

# ---------------- HPE OneView Config ----------------
config = {
    "ip": "X.X.X.X",       # Replace with your OneView IP
    "credentials": {
        "userName": "USERNAME",
        "password": "PASSWORD"
    }
}

oneview_client = OneViewClient(config)

# ---------------- Fetch Server Hardware ----------------
server_hardware = oneview_client.server_hardware.get_all()

print("------ CPU Utilization per Server ------")
for sh in server_hardware:
    try:
        server = oneview_client.server_hardware.get_by_uri(sh["uri"])
        util = server.get_utilization(filter="name:CpuUtilization")
        avg_cpu = 0
        if util and util.get("metricList"):
            avg_cpu = util["metricList"][0].get("average", 0)
        print(f"Server: {sh.get('name')} | CPU Utilization: {avg_cpu}%")
    except Exception as e:
        print(f"Server: {sh.get('name')} | CPU Utilization: N/A | Error: {e}")

# ---------------- Fetch Storage Systems ----------------
storage_systems = oneview_client.storage_systems.get_all()

print("\n------ Storage Utilization ------")
for s in storage_systems:
    try:
        total_capacity = s.get("totalCapacity", 0)
        allocated_capacity = s.get("allocatedCapacity", 0)
        free_capacity = total_capacity - allocated_capacity
        utilization = (allocated_capacity / total_capacity * 100) if total_capacity else 0

        print(f"Storage: {s.get('name')}")
        print(f"  Total: {round(total_capacity / (1024**3), 2)} GB")
        print(f"  Allocated: {round(allocated_capacity / (1024**3), 2)} GB")
        print(f"  Free: {round(free_capacity / (1024**3), 2)} GB")
        print(f"  Utilization: {round(utilization, 2)}%\n")
    except Exception as e:
        print(f"Storage: {s.get('name')} | Utilization: N/A | Error: {e}")
