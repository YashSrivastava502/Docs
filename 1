# ==============================
# DNS Failover Script
# Author: Yash Srivastava (POC)
# ==============================

$dc1 = "NJPVDCTEST01"              # Primary DC to monitor
$backupFile = "C:\Scripts\all-dns-records-backup.csv"

Write-Host "üîç Checking connectivity to $dc1..."
if (Test-Connection -ComputerName $dc1 -Count 1 -Quiet) {
    Write-Host "‚úÖ DC1 is reachable. No failover required."
    exit
}

Write-Host "‚ùå DC1 is unreachable. Running Failover Mode..."
Start-Sleep -Seconds 2

# Step 1: Backup all DNS records
Write-Host "üì¶ Taking backup of all DNS records..."
$zones = (Get-DnsServerZone).ZoneName

$allRecords = foreach ($zone in $zones) {
    Get-DnsServerResourceRecord -ZoneName $zone |
    Select-Object @{Name='ZoneName';Expression={$zone}},
                  @{Name='RecordType';Expression={$_.RecordType}},
                  @{Name='HostName';Expression={$_.HostName}},
                  @{Name='RecordData';Expression={$_.RecordData}}
}

$allRecords | Export-Csv -Path $backupFile -NoTypeInformation
Write-Host "üóÇÔ∏è Backup saved to: $backupFile"
Start-Sleep -Seconds 2

# Step 2: Create CNAME for each original A record ‚Üí -dr
Write-Host "üîÅ Creating CNAMEs for A records (excluding -dr)..."
foreach ($rec in $allRecords | Where-Object { $_.RecordType -eq 'A' -and $_.HostName -notmatch '-dr$' }) {

    $zone = $rec.ZoneName
    $name = $rec.HostName
    $drName = "$name-dr"

    # Check if corresponding DR record exists
    $drExists = Get-DnsServerResourceRecord -ZoneName $zone -Name $drName -ErrorAction SilentlyContinue
    if ($null -eq $drExists) {
        Write-Warning "‚ö†Ô∏è No DR A record found for $name in $zone. Skipping."
        continue
    }

    try {
        # Create CNAME record pointing to -dr
        Add-DnsServerResourceRecordCName -ZoneName $zone -Name $name -HostNameAlias "$drName.$zone" -ErrorAction Stop
        Write-Host "‚úÖ Created CNAME: $name ‚Üí $drName.$zone"

        # Delete original A record after successful CNAME creation
        Remove-DnsServerResourceRecord -ZoneName $zone -Name $name -RRType "A" -Force
        Write-Host "üóëÔ∏è Deleted original A record: $name in $zone"
    }
    catch {
        Write-Warning "‚ö†Ô∏è Failed for $name in $zone: $($_.Exception.Message)"
    }
}

Write-Host "üèÅ Failover process completed successfully!"
