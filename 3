Filename: DNS-Failover.ps1

# === CONFIG ===
$dc1Name = "use1-dr-fp-com-local"
$drCSVPath = "C:\Scripts\dr_records.csv"
$backupCSVPath = "C:\Scripts\original_records_backup.csv"

# === FUNCTIONS ===
function Test-DC1Connectivity {
    Test-Connection -ComputerName $dc1Name -Count 2 -Quiet
}

function Backup-ARecords {
    $zones = Get-DnsServerZone | Where-Object { $_.ZoneType -eq "Primary" }
    $allRecords = @()

    foreach ($zone in $zones) {
        $zoneName = $zone.ZoneName
        $aRecords = Get-DnsServerResourceRecord -ZoneName $zoneName | Where-Object { $_.RecordType -eq "A" }

        foreach ($record in $aRecords) {
            $row = [PSCustomObject]@{
                Name = $record.HostName
                IP = $record.RecordData.IPv4Address.IPAddressToString
                Zone = $zoneName
            }
            $allRecords += $row
        }
    }

    $allRecords | Export-Csv -Path $backupCSVPath -NoTypeInformation
    Write-Host " A records backed up to $backupCSVPath"
}

function Create-DRRecords {
    $records = Import-Csv -Path $drCSVPath

    foreach ($record in $records) {
        $zone = $record.Zone
        $originalName = $record.Name
        $drName = "$originalName-dr"
        $ip = $record.IP

        # Delete original A record
        $aRecord = Get-DnsServerResourceRecord -ZoneName $zone -Name $originalName -ErrorAction SilentlyContinue | Where-Object { $_.RecordType -eq "A" }
        if ($aRecord) {
            Remove-DnsServerResourceRecord -ZoneName $zone -Name $originalName -RRType "A" -RecordData $aRecord.RecordData.IPv4Address -Force
        }

        # Create DR A record
        Add-DnsServerResourceRecordA -Name $drName -ZoneName $zone -IPv4Address $ip

        # Create CNAME pointing to DR record
        Add-DnsServerResourceRecordCName -Name $originalName -ZoneName $zone -HostNameAlias "$drName.$zone"
    }

    Write-Host " DR A records and CNAMEs created."
}

# === MAIN ===
if (-not (Test-DC1Connectivity)) {
    Write-Host " DC1 ($dc1Name) is unreachable. Running Failover Mode..."

    if (-not (Test-Path $backupCSVPath)) {
        Backup-ARecords
    } else {
        Write-Host " Backup already exists at $backupCSVPath. Skipping backup."
    }

    Create-DRRecords
} else {
    Write-Host " DC1 is reachable. Skip failover. Nothing to do."
}



Filename: DNS-Fallback.ps1

# === CONFIG ===
$dc1Name = "use1-dr-fp-com-local"
$backupCSVPath = "C:\Scripts\original_records_backup.csv"

# === FUNCTIONS ===
function Test-DC1Connectivity {
    Test-Connection -ComputerName $dc1Name -Count 2 -Quiet
}

function Restore-OriginalRecords {
    $records = Import-Csv -Path $backupCSVPath

    foreach ($record in $records) {
        $zone = $record.Zone
        $name = $record.Name
        $ip = $record.IP

        # Delete CNAME (if present)
        $cnameRecord = Get-DnsServerResourceRecord -ZoneName $zone -Name $name -ErrorAction SilentlyContinue | Where-Object { $_.RecordType -eq "CName" }
        if ($cnameRecord) {
            Remove-DnsServerResourceRecord -ZoneName $zone -Name $name -RRType "CName" -Force
        }

        # Restore original A record
        Add-DnsServerResourceRecordA -Name $name -ZoneName $zone -IPv4Address $ip
    }

    Write-Host " Original A records restored and CNAMEs removed."
}

# === MAIN ===
if (Test-DC1Connectivity) {
    Write-Host " DC1 is reachable. Running Fallback Mode..."

    if (Test-Path $backupCSVPath) {
        Restore-OriginalRecords
    } else {
        Write-Host "âš  Backup file not found: $backupCSVPath"
    }
} else {
    Write-Host " DC1 is still unreachable. Skip fallback."
}

